name: "System Smoke Tests"
on: [pull_request, push]

jobs:
  setup:
    runs-on: self-hosted
    steps:
    - name: Check Test Cluster
      run: |
        if kubectl get nodes; then
          kubectl get nodes
        else
          echo "test cluster not active. Attempting to create through kind..."
          kind create cluster
          kubectl get nodes
        fi
  test-source:
    runs-on: self-hosted
    needs: setup
    steps:
    - uses: actions/checkout@v2
    - name: Clean Cluster
      run: |
        kubectl delete all --all --wait=true
        sleep 5
    - name: Deploy From Source
      run: |
        skaffold run
        sleep 30
        kubectl get pods
        echo waiting for ready state...
        kubectl wait --for=condition=ready deployment  --all --timeout=600s
    - name: Test HTTP
      timeout-minutes: 5
      run: |
        RESULT=" "
        while [[ "$RESULT" != "  HTTP/1.1 200 OK" ]]; do
          sleep 1
          RESULT=$(kubectl exec deployments/frontend -- sh -c "wget --spider -S "http://frontend" 2>&1 | grep 'HTTP/'")
          echo "front end response: $RESULT"
        done
        if [[ "$RESULT" != "  HTTP/1.1 200 OK" ]]; then 
          exit 1
        fi
  test-release:
    runs-on: self-hosted
    needs: [setup, test-source]
    steps:
    - uses: actions/checkout@v2
    - name: Clean Cluster
      run: |
        kubectl delete all --all --wait=true
        sleep 5
    - name: Deploy Release Manifests
      run: |
        kubectl apply -f ./release/kubernetes-manifests.yaml
        sleep 30
        kubectl get pods
        echo waiting for ready state...
        kubectl wait --for=condition=ready deployment  --all --timeout=600s
    - name: Test HTTP
      timeout-minutes: 5
      run: |
        RESULT=" "
        while [[ "$RESULT" != "  HTTP/1.1 200 OK" ]]; do
          sleep 1
          RESULT=$(kubectl exec deployments/frontend -- sh -c "wget --spider -S "http://frontend" 2>&1 | grep 'HTTP/'")
          echo "front end response: $RESULT"
        done
        if [[ "$RESULT" != "  HTTP/1.1 200 OK" ]]; then 
          exit 1
        fi
